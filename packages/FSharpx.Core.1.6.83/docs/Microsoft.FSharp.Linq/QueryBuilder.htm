<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>QueryBuilder - Microsoft&#174; Visual Studio&#174; 2012 Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../FSharp.Control/index.htm">FSharp.Control</a>
      </li>
			<li>
          <a href="../FSharp.IO/index.htm">FSharp.IO</a>
      </li>
			<li>
          <a href="../FSharp.Net/index.htm">FSharp.Net</a>
      </li>
			<li>
          <a href="../FSharpx/index.htm">FSharpx</a>
      </li>
			<li>
          <a href="../FSharpx.Core/index.htm">FSharpx.Core</a>
      </li>
			<li>
          <a href="../FSharpx.DataStructures/index.htm">FSharpx.DataStructures</a>
      </li>
			<li>
          <a href="../FSharpx.Http/index.htm">FSharpx.Http</a>
      </li>
			<li>
          <a href="../FSharpx.Observable/index.htm">FSharpx.Observable</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders/index.htm">FSharpx.TypeProviders</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.AppSettings/index.htm">FSharpx.TypeProviders.AppSettings</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Documents/index.htm">FSharpx.TypeProviders.Documents</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Excel/index.htm">FSharpx.TypeProviders.Excel</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase/index.htm">FSharpx.TypeProviders.Freebase</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.DesignTime/index.htm">FSharpx.TypeProviders.Freebase.DesignTime</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.FreebaseRuntime/index.htm">FSharpx.TypeProviders.Freebase.FreebaseRuntime</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.FreebaseTypeExtender/index.htm">FSharpx.TypeProviders.Freebase.FreebaseTypeExtender</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Graph/index.htm">FSharpx.TypeProviders.Graph</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Machine/index.htm">FSharpx.TypeProviders.Machine</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Math/index.htm">FSharpx.TypeProviders.Math</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Regex/index.htm">FSharpx.TypeProviders.Regex</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Xaml/index.htm">FSharpx.TypeProviders.Xaml</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections/index.htm">Microsoft.FSharp.Collections</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections.Tagged/index.htm">Microsoft.FSharp.Collections.Tagged</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Control/index.htm">Microsoft.FSharp.Control</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Core/index.htm">Microsoft.FSharp.Core</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Core.CompilerServices/index.htm">Microsoft.FSharp.Core.CompilerServices</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Data.TypeProviders.DesignTime/index.htm">Microsoft.FSharp.Data.TypeProviders.DesignTime</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Data.UnitSystems.SI.UnitNames/index.htm">Microsoft.FSharp.Data.UnitSystems.SI.UnitNames</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq/index.htm" class="current">Microsoft.FSharp.Linq</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq.QueryRunExtensions/index.htm">Microsoft.FSharp.Linq.QueryRunExtensions</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq.RuntimeHelpers/index.htm">Microsoft.FSharp.Linq.RuntimeHelpers</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Math/index.htm">Microsoft.FSharp.Math</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Metadata/index.htm">Microsoft.FSharp.Metadata</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.NativeInterop/index.htm">Microsoft.FSharp.NativeInterop</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Quotations/index.htm">Microsoft.FSharp.Quotations</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Reflection/index.htm">Microsoft.FSharp.Reflection</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text/index.htm">Microsoft.FSharp.Text</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.Lexing/index.htm">Microsoft.FSharp.Text.Lexing</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.Parsing/index.htm">Microsoft.FSharp.Text.Parsing</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.StructuredFormat/index.htm">Microsoft.FSharp.Text.StructuredFormat</a>
      </li>
			<li>
          <a href="../Samples.FSharp.ProvidedTypes/index.htm">Samples.FSharp.ProvidedTypes</a>
      </li>
			<li>
          <a href="../Utilities.Caching/index.htm">Utilities.Caching</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in Microsoft.FSharp.Linq</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`10.htm">ActionHelper`10</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`11.htm">ActionHelper`11</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`12.htm">ActionHelper`12</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`13.htm">ActionHelper`13</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`14.htm">ActionHelper`14</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`15.htm">ActionHelper`15</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`16.htm">ActionHelper`16</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`17.htm">ActionHelper`17</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`18.htm">ActionHelper`18</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`19.htm">ActionHelper`19</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`20.htm">ActionHelper`20</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`5.htm">ActionHelper`5</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`6.htm">ActionHelper`6</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`7.htm">ActionHelper`7</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`8.htm">ActionHelper`8</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ActionHelper`9.htm">ActionHelper`9</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/ExtraHashCompare.htm">ExtraHashCompare</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`10.htm">FuncHelper`10</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`11.htm">FuncHelper`11</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`12.htm">FuncHelper`12</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`13.htm">FuncHelper`13</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`14.htm">FuncHelper`14</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`15.htm">FuncHelper`15</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`16.htm">FuncHelper`16</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`17.htm">FuncHelper`17</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`18.htm">FuncHelper`18</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`19.htm">FuncHelper`19</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`20.htm">FuncHelper`20</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`21.htm">FuncHelper`21</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`6.htm">FuncHelper`6</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`7.htm">FuncHelper`7</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`8.htm">FuncHelper`8</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/FuncHelper`9.htm">FuncHelper`9</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/HelperTypes.htm">HelperTypes</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/NullableModule.htm">NullableModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/NullableOperators.htm">NullableOperators</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/QueryBuilder.htm" class="current">QueryBuilder</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/QueryModule.htm">QueryModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/QuotationEvaluation.htm">QuotationEvaluation</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Linq/QuotationEvaluator.htm">QuotationEvaluator</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> QueryBuilder</p>
		<p><strong>Namespace</strong> Microsoft.FSharp.Linq</p>
	</div>
    <div class="sub-header">
			<div id="summary">The type used to support the F# query syntax. Use 'query {... }' to use the query syntax. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#All``2">All&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#AverageBy``3">AverageBy&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#AverageByNullable``3">AverageByNullable&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Contains``2">Contains&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Count``2">Count&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Distinct``2">Distinct&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#ExactlyOne``2">ExactlyOne&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#ExactlyOneOrDefault``2">ExactlyOneOrDefault&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Exists``2">Exists&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Find``2">Find&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#For``4">For&lt;T, Q, TResult, Q2&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#GroupBy``3">GroupBy&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#GroupJoin``5">GroupJoin&lt;TOuter, Q, TInner, TKey, TResult&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#GroupValBy``4">GroupValBy&lt;T, TKey, TValue, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Head``2">Head&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#HeadOrDefault``2">HeadOrDefault&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Join``5">Join&lt;TOuter, Q, TInner, TKey, TResult&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Last``2">Last&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#LastOrDefault``2">LastOrDefault&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#LeftOuterJoin``5">LeftOuterJoin&lt;TOuter, Q, TInner, TKey, TResult&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#MaxBy``3">MaxBy&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#MaxByNullable``3">MaxByNullable&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#MinBy``3">MinBy&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#MinByNullable``3">MinByNullable&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Nth``2">Nth&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Quote``1">Quote&lt;T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Run``1">Run&lt;T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Select``3">Select&lt;T, Q, TResult&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Skip``2">Skip&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#SkipWhile``2">SkipWhile&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#SortBy``3">SortBy&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#SortByDescending``3">SortByDescending&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#SortByNullable``3">SortByNullable&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#SortByNullableDescending``3">SortByNullableDescending&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Source``1">Source&lt;T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Source``2">Source&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#SumBy``3">SumBy&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#SumByNullable``3">SumByNullable&lt;T, Q, TValue&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Take``2">Take&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#TakeWhile``2">TakeWhile&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#ThenBy``3">ThenBy&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#ThenByDescending``3">ThenByDescending&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#ThenByNullable``3">ThenByNullable&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#ThenByNullableDescending``3">ThenByNullableDescending&lt;T, Q, TKey&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Where``2">Where&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Yield``2">Yield&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#YieldFrom``2">YieldFrom&lt;T, Q&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Linq/QueryBuilder.htm#Zero``2">Zero&lt;T, Q&gt;</a></li>
			</ul>
		
		
	</div>
	
	
	<h3 class="section">Public instance methods</h3>
	
	<div id="All``2" class="method">
		<h4><span title="System.bool">bool</span> <strong>All&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate)</h4>
		<div class="content">A query operator that determines whether all elements selected so far satisfies a condition. 



      
    </div>
	</div>
	<div id="AverageBy``3" class="method">
		<h4><span title="Microsoft.FSharp.Linq.TValue">TValue</span> <strong>AverageBy&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> projection)</h4>
		<div class="content">A query operator that selects a value for each element selected so far and returns the average of these values. 



      
    </div>
	</div>
	<div id="AverageByNullable``3" class="method">
		<h4><span title="System.Nullable<TValue>">Nullable&lt;TValue&gt;</span> <strong>AverageByNullable&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> projection)</h4>
		<div class="content">A query operator that selects a nullable value for each element selected so far and returns the average of these values.
If any nullable does not have a value, it is ignored. 



      
    </div>
	</div>
	<div id="Contains``2" class="method">
		<h4><span title="System.bool">bool</span> <strong>Contains&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <span title="Microsoft.FSharp.Linq.T">T</span> key)</h4>
		<div class="content">A query operator that determines whether the selected elements contains a specified element. 



      
    </div>
	</div>
	<div id="Count``2" class="method">
		<h4><span title="System.int">int</span> <strong>Count&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that returns the number of selected elements. 



      
    </div>
	</div>
	<div id="Distinct``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Distinct&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that selects distinct elements from the elements selected so far. 



      
    </div>
	</div>
	<div id="ExactlyOne``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>ExactlyOne&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that selects the single, specific element selected so far 



      
    </div>
	</div>
	<div id="ExactlyOneOrDefault``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>ExactlyOneOrDefault&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that selects the single, specific element of those selected so far, or a default value if that element is not found. 



      
    </div>
	</div>
	<div id="Exists``2" class="method">
		<h4><span title="System.bool">bool</span> <strong>Exists&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate)</h4>
		<div class="content">A query operator that determines whether any element selected so far satisfies a condition. 



      
    </div>
	</div>
	<div id="Find``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>Find&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate)</h4>
		<div class="content">A query operator that selects the first element selected so far that satisfies a specified condition. 



      
    </div>
	</div>
	<div id="For``4" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>For&lt;T, Q, TResult, Q2&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> body)</h4>
		<div class="content">A method used to support the F# query syntax.  Projects each element of a sequence to another sequence and combines the resulting sequences into one sequence. 



      
    </div>
	</div>
	<div id="GroupBy``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>GroupBy&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that groups the elements selected so far according to a specified key selector. 



      
    </div>
	</div>
	<div id="GroupJoin``5" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>GroupJoin&lt;TOuter, Q, TInner, TKey, TResult&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> outerSource, <a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> innerSource, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> outerKeySelector, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> innerKeySelector, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> resultSelector)</h4>
		<div class="content">A query operator that correlates two sets of selected values based on matching keys and groups the results.
Normal usage is 'groupJoin y in elements2 on (key1 = key2) into group'. 



      
    </div>
	</div>
	<div id="GroupValBy``4" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>GroupValBy&lt;T, TKey, TValue, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> resultSelector, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that selects a value for each element selected so far and groups the elements by the given key. 



      
    </div>
	</div>
	<div id="Head``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>Head&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that selects the first element from those selected so far. 



      
    </div>
	</div>
	<div id="HeadOrDefault``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>HeadOrDefault&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that selects the first element of those selected so far, or a default value if the sequence contains no elements. 



      
    </div>
	</div>
	<div id="Join``5" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Join&lt;TOuter, Q, TInner, TKey, TResult&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> outerSource, <a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> innerSource, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> outerKeySelector, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> innerKeySelector, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> resultSelector)</h4>
		<div class="content">A query operator that correlates two sets of selected values based on matching keys.
Normal usage is 'join y in elements2 on (key1 = key2)'. 



      
    </div>
	</div>
	<div id="Last``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>Last&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that selects the last element of those selected so far. 



      
    </div>
	</div>
	<div id="LastOrDefault``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>LastOrDefault&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source)</h4>
		<div class="content">A query operator that selects the last element of those selected so far, or a default value if no element is found. 



      
    </div>
	</div>
	<div id="LeftOuterJoin``5" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>LeftOuterJoin&lt;TOuter, Q, TInner, TKey, TResult&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> outerSource, <a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> innerSource, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> outerKeySelector, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> innerKeySelector, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> resultSelector)</h4>
		<div class="content">A query operator that correlates two sets of selected values based on matching keys and groups the results.
If any group is empty, a group with a single default value is used instead.
Normal usage is 'leftOuterJoin y in elements2 on (key1 = key2) into group'. 



      
    </div>
	</div>
	<div id="MaxBy``3" class="method">
		<h4><span title="Microsoft.FSharp.Linq.TValue">TValue</span> <strong>MaxBy&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> valueSelector)</h4>
		<div class="content">A query operator that selects a value for each element selected so far and returns the maximum resulting value. 



      
    </div>
	</div>
	<div id="MaxByNullable``3" class="method">
		<h4><span title="System.Nullable<TValue>">Nullable&lt;TValue&gt;</span> <strong>MaxByNullable&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> valueSelector)</h4>
		<div class="content">A query operator that selects a nullable value for each element selected so far and returns the maximum of these values.
If any nullable does not have a value, it is ignored. 



      
    </div>
	</div>
	<div id="MinBy``3" class="method">
		<h4><span title="Microsoft.FSharp.Linq.TValue">TValue</span> <strong>MinBy&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> valueSelector)</h4>
		<div class="content">A query operator that selects a value for each element selected so far and returns the minimum resulting value. 



      
    </div>
	</div>
	<div id="MinByNullable``3" class="method">
		<h4><span title="System.Nullable<TValue>">Nullable&lt;TValue&gt;</span> <strong>MinByNullable&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> valueSelector)</h4>
		<div class="content">A query operator that selects a nullable value for each element selected so far and returns the minimum of these values.
If any nullable does not have a value, it is ignored. 



      
    </div>
	</div>
	<div id="Nth``2" class="method">
		<h4><span title="Microsoft.FSharp.Linq.T">T</span> <strong>Nth&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <span title="System.int">int</span> index)</h4>
		<div class="content">A query operator that selects the element at a specified index amongst those selected so far. 



      
    </div>
	</div>
	<div id="Quote``1" class="method">
		<h4><a href="../Microsoft.FSharp.Quotations/FSharpExpr`1.htm">FSharpExpr&lt;T&gt;</a> <strong>Quote&lt;T&gt;</strong>(<a href="../Microsoft.FSharp.Quotations/FSharpExpr`1.htm">FSharpExpr&lt;T&gt;</a> q)</h4>
		<div class="content">A method used to support the F# query syntax.  Indicates that the query should be passed as a quotation to the Run method. 



      
    </div>
	</div>
	<div id="Run``1" class="method">
		<h4><span title="System.Linq.IQueryable<T>">IQueryable&lt;T&gt;</span> <strong>Run&lt;T&gt;</strong>(<a href="../Microsoft.FSharp.Quotations/FSharpExpr`1.htm">FSharpExpr&lt;T&gt;</a> q)</h4>
		<div class="content">A method used to support the F# query syntax.  Runs the given quotation as a query using LINQ IQueryable rules. 



      
    </div>
	</div>
	<div id="Select``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Select&lt;T, Q, TResult&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> projection)</h4>
		<div class="content">A query operator that projects each of the elements selected so far. 



      
    </div>
	</div>
	<div id="Skip``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Skip&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <span title="System.int">int</span> count)</h4>
		<div class="content">A query operator that bypasses a specified number of the elements selected so far and selects the remaining elements. 



      
    </div>
	</div>
	<div id="SkipWhile``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>SkipWhile&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate)</h4>
		<div class="content">A query operator that bypasses elements in a sequence as long as a specified condition is true and then selects the remaining elements. 



      
    </div>
	</div>
	<div id="SortBy``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>SortBy&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that sorts the elements selected so far in ascending order by the given sorting key. 



      
    </div>
	</div>
	<div id="SortByDescending``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>SortByDescending&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that sorts the elements selected so far in descending order by the given sorting key. 



      
    </div>
	</div>
	<div id="SortByNullable``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>SortByNullable&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that sorts the elements selected so far in ascending order by the given nullable sorting key. 



      
    </div>
	</div>
	<div id="SortByNullableDescending``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>SortByNullableDescending&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that sorts the elements selected so far in descending order by the given nullable sorting key. 



      
    </div>
	</div>
	<div id="Source``1" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Source&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> source)</h4>
		<div class="content">A method used to support the F# query syntax.  Inputs to queries are implicitly wrapped by a call to one of the overloads of this method. 



      
    </div>
	</div>
	<div id="Source``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Source&lt;T, Q&gt;</strong>(<span title="System.Linq.IQueryable<T>">IQueryable&lt;T&gt;</span> source)</h4>
		<div class="content">A method used to support the F# query syntax.  Inputs to queries are implicitly wrapped by a call to one of the overloads of this method. 



      
    </div>
	</div>
	<div id="SumBy``3" class="method">
		<h4><span title="Microsoft.FSharp.Linq.TValue">TValue</span> <strong>SumBy&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> projection)</h4>
		<div class="content">A query operator that selects a value for each element selected so far and returns the sum of these values. 



      
    </div>
	</div>
	<div id="SumByNullable``3" class="method">
		<h4><span title="System.Nullable<TValue>">Nullable&lt;TValue&gt;</span> <strong>SumByNullable&lt;T, Q, TValue&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> valueSelector)</h4>
		<div class="content">A query operator that selects a nullable value for each element selected so far and returns the sum of these values.
If any nullable does not have a value, it is ignored. 



      
    </div>
	</div>
	<div id="Take``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Take&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <span title="System.int">int</span> count)</h4>
		<div class="content">A query operator that selects a specified number of contiguous elements from those selected so far. 



      
    </div>
	</div>
	<div id="TakeWhile``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>TakeWhile&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate)</h4>
		<div class="content">A query operator that selects elements from a sequence as long as a specified condition is true, and then skips the remaining elements. 



      
    </div>
	</div>
	<div id="ThenBy``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>ThenBy&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that performs a subsequent ordering of the elements selected so far in ascending order by the given sorting key.
This operator may only be used immediately after a 'sortBy', 'sortByDescending', 'thenBy' or 'thenByDescending', or their nullable variants. 



      
    </div>
	</div>
	<div id="ThenByDescending``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>ThenByDescending&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that performs a subsequent ordering of the elements selected so far in descending order by the given sorting key.
This operator may only be used immediately after a 'sortBy', 'sortByDescending', 'thenBy' or 'thenByDescending', or their nullable variants. 



      
    </div>
	</div>
	<div id="ThenByNullable``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>ThenByNullable&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that performs a subsequent ordering of the elements selected so far in ascending order by the given nullable sorting key.
This operator may only be used immediately after a 'sortBy', 'sortByDescending', 'thenBy' or 'thenByDescending', or their nullable variants. 



      
    </div>
	</div>
	<div id="ThenByNullableDescending``3" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>ThenByNullableDescending&lt;T, Q, TKey&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> keySelector)</h4>
		<div class="content">A query operator that performs a subsequent ordering of the elements selected so far in descending order by the given nullable sorting key.
This operator may only be used immediately after a 'sortBy', 'sortByDescending', 'thenBy' or 'thenByDescending', or their nullable variants. 



      
    </div>
	</div>
	<div id="Where``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Where&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> source, <a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate)</h4>
		<div class="content">A query operator that selects those elements based on a specified predicate. 



      
    </div>
	</div>
	<div id="Yield``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Yield&lt;T, Q&gt;</strong>(<span title="Microsoft.FSharp.Linq.T">T</span> value)</h4>
		<div class="content">A method used to support the F# query syntax.  Returns a sequence of length one that contains the specified value. 



      
    </div>
	</div>
	<div id="YieldFrom``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>YieldFrom&lt;T, Q&gt;</strong>(<a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> computation)</h4>
		<div class="content">A method used to support the F# query syntax.  Returns a sequence that contains the specified values. 



      
    </div>
	</div>
	<div id="Zero``2" class="method">
		<h4><a href="../Microsoft.FSharp.Linq/QuerySource`2.htm">QuerySource&lt;T, Q&gt;</a> <strong>Zero&lt;T, Q&gt;</strong>()</h4>
		<div class="content">A method used to support the F# query syntax.  Returns an empty sequence that has the specified type argument. 



      
    </div>
	</div>
	
	
	<div id="footer">
  <p>Based on v4.3.0.0 of FSharp.Core.dll (Microsoft&#174; Visual Studio&#174; 2012)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>