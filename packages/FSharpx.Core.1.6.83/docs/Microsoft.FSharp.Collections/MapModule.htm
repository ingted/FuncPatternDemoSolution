<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>MapModule - Microsoft&#174; Visual Studio&#174; 2012 Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../FSharp.Control/index.htm">FSharp.Control</a>
      </li>
			<li>
          <a href="../FSharp.IO/index.htm">FSharp.IO</a>
      </li>
			<li>
          <a href="../FSharp.Net/index.htm">FSharp.Net</a>
      </li>
			<li>
          <a href="../FSharpx/index.htm">FSharpx</a>
      </li>
			<li>
          <a href="../FSharpx.Core/index.htm">FSharpx.Core</a>
      </li>
			<li>
          <a href="../FSharpx.DataStructures/index.htm">FSharpx.DataStructures</a>
      </li>
			<li>
          <a href="../FSharpx.Http/index.htm">FSharpx.Http</a>
      </li>
			<li>
          <a href="../FSharpx.Observable/index.htm">FSharpx.Observable</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders/index.htm">FSharpx.TypeProviders</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.AppSettings/index.htm">FSharpx.TypeProviders.AppSettings</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Documents/index.htm">FSharpx.TypeProviders.Documents</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Excel/index.htm">FSharpx.TypeProviders.Excel</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase/index.htm">FSharpx.TypeProviders.Freebase</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.DesignTime/index.htm">FSharpx.TypeProviders.Freebase.DesignTime</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.FreebaseRuntime/index.htm">FSharpx.TypeProviders.Freebase.FreebaseRuntime</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.FreebaseTypeExtender/index.htm">FSharpx.TypeProviders.Freebase.FreebaseTypeExtender</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Graph/index.htm">FSharpx.TypeProviders.Graph</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Machine/index.htm">FSharpx.TypeProviders.Machine</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Math/index.htm">FSharpx.TypeProviders.Math</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Regex/index.htm">FSharpx.TypeProviders.Regex</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Xaml/index.htm">FSharpx.TypeProviders.Xaml</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections/index.htm" class="current">Microsoft.FSharp.Collections</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections.Tagged/index.htm">Microsoft.FSharp.Collections.Tagged</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Control/index.htm">Microsoft.FSharp.Control</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Core/index.htm">Microsoft.FSharp.Core</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Core.CompilerServices/index.htm">Microsoft.FSharp.Core.CompilerServices</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Data.TypeProviders.DesignTime/index.htm">Microsoft.FSharp.Data.TypeProviders.DesignTime</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Data.UnitSystems.SI.UnitNames/index.htm">Microsoft.FSharp.Data.UnitSystems.SI.UnitNames</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq/index.htm">Microsoft.FSharp.Linq</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq.QueryRunExtensions/index.htm">Microsoft.FSharp.Linq.QueryRunExtensions</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq.RuntimeHelpers/index.htm">Microsoft.FSharp.Linq.RuntimeHelpers</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Math/index.htm">Microsoft.FSharp.Math</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Metadata/index.htm">Microsoft.FSharp.Metadata</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.NativeInterop/index.htm">Microsoft.FSharp.NativeInterop</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Quotations/index.htm">Microsoft.FSharp.Quotations</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Reflection/index.htm">Microsoft.FSharp.Reflection</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text/index.htm">Microsoft.FSharp.Text</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.Lexing/index.htm">Microsoft.FSharp.Text.Lexing</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.Parsing/index.htm">Microsoft.FSharp.Text.Parsing</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.StructuredFormat/index.htm">Microsoft.FSharp.Text.StructuredFormat</a>
      </li>
			<li>
          <a href="../Samples.FSharp.ProvidedTypes/index.htm">Samples.FSharp.ProvidedTypes</a>
      </li>
			<li>
          <a href="../Utilities.Caching/index.htm">Utilities.Caching</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in Microsoft.FSharp.Collections</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../Microsoft.FSharp.Collections/Array2DModule.htm">Array2DModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/Array3DModule.htm">Array3DModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/Array4DModule.htm">Array4DModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/ArrayModule.htm">ArrayModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/ComparisonIdentity.htm">ComparisonIdentity</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/FSharpList`1.htm">FSharpList&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/FSharpSet`1.htm">FSharpSet&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/HashIdentity.htm">HashIdentity</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/HashMultiMap`2.htm">HashMultiMap&lt;Key, Value&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/HashSet`1.htm">HashSet&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/LazyList`1.htm">LazyList&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/LazyListModule.htm">LazyListModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/ListModule.htm">ListModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/MapModule.htm" class="current">MapModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/Parallel.htm">Parallel</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/PSeqModule.htm">PSeqModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/ResizeArrayModule.htm">ResizeArrayModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/SeqModule.htm">SeqModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/SetModule.htm">SetModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Collections/Tags.htm">Tags</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> MapModule</p>
		<p><strong>Namespace</strong> Microsoft.FSharp.Collections</p>
	</div>
    <div class="sub-header">
			<div id="summary">Functional programming operators related to the  <code>Map<_,_></code>  type. 
			</div>
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Add``2">Add&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#ContainsKey``2">ContainsKey&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Empty``2">Empty&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Exists``2">Exists&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Filter``2">Filter&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Find``2">Find&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#FindKey``2">FindKey&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Fold``3">Fold&lt;TKey, T, TState&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#FoldBack``3">FoldBack&lt;TKey, T, TState&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#ForAll``2">ForAll&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#IsEmpty``2">IsEmpty&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Iterate``2">Iterate&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Map``3">Map&lt;TKey, T, TResult&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#OfArray``2">OfArray&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#OfList``2">OfList&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#OfSeq``2">OfSeq&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Partition``2">Partition&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Pick``3">Pick&lt;TKey, T, TResult&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#Remove``2">Remove&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#ToArray``2">ToArray&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#ToList``2">ToList&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#ToSeq``2">ToSeq&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#TryFind``2">TryFind&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#TryFindKey``2">TryFindKey&lt;TKey, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Collections/MapModule.htm#TryPick``3">TryPick&lt;TKey, T, TResult&gt;</a></li>
			</ul>
		
		
	</div>
	
	
	
	<h3 class="section">Public static methods</h3>
	
	<div id="Add``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>Add&lt;TKey, T&gt;</strong>(<span title="Microsoft.FSharp.Collections.TKey">TKey</span> key, <span title="Microsoft.FSharp.Collections.T">T</span> value, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Returns a new map with the binding added to the given map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="Microsoft.FSharp.Collections.TKey">TKey</span></code> key</h6>
          <p class="comments">The input key. </p>
          <h6><code><span title="Microsoft.FSharp.Collections.T">T</span></code> value</h6>
          <p class="comments">The input value. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code></h6>
        <p>The resulting map. </p>
      </div>
      
    </div>
	</div>
	<div id="ContainsKey``2" class="method">
		<h4><span title="System.bool">bool</span> <strong>ContainsKey&lt;TKey, T&gt;</strong>(<span title="Microsoft.FSharp.Collections.TKey">TKey</span> key, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Tests if an element is in the domain of the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="Microsoft.FSharp.Collections.TKey">TKey</span></code> key</h6>
          <p class="comments">The input key. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.bool">bool</span></code></h6>
        <p>True if the map contains the key. </p>
      </div>
      
    </div>
	</div>
	<div id="Empty``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>Empty&lt;TKey, T&gt;</strong>()</h4>
		<div class="content">The empty map. 



      
    </div>
	</div>
	<div id="Exists``2" class="method">
		<h4><span title="System.bool">bool</span> <strong>Exists&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Returns true if the given predicate returns true for one of the
bindings in the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to test the input elements. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.bool">bool</span></code></h6>
        <p>True if the predicate returns true for one of the key/value pairs. </p>
      </div>
      
    </div>
	</div>
	<div id="Filter``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>Filter&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Builds a new map containing only the bindings for which the given predicate returns 'true'. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to test the key/value pairs. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code></h6>
        <p>The filtered map. </p>
      </div>
      
    </div>
	</div>
	<div id="Find``2" class="method">
		<h4><span title="Microsoft.FSharp.Collections.T">T</span> <strong>Find&lt;TKey, T&gt;</strong>(<span title="Microsoft.FSharp.Collections.TKey">TKey</span> key, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Lookup an element in the map, raising  <code>KeyNotFoundException</code>  if no binding
exists in the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="Microsoft.FSharp.Collections.TKey">TKey</span></code> key</h6>
          <p class="comments">The input key. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="Microsoft.FSharp.Collections.T">T</span></code></h6>
        <p>The value mapped to the given key. </p>
      </div>
      
    </div>
	</div>
	<div id="FindKey``2" class="method">
		<h4><span title="Microsoft.FSharp.Collections.TKey">TKey</span> <strong>FindKey&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Evaluates the function on each mapping in the collection. Returns the key for the first mapping
where the function returns 'true'. Raise  <code>KeyNotFoundException</code>  if no such element exists. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to test the input elements. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="Microsoft.FSharp.Collections.TKey">TKey</span></code></h6>
        <p>The first key for which the predicate evaluates true. </p>
      </div>
      
    </div>
	</div>
	<div id="Fold``3" class="method">
		<h4><span title="Microsoft.FSharp.Collections.TState">TState</span> <strong>Fold&lt;TKey, T, TState&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> folder, <span title="Microsoft.FSharp.Collections.TState">TState</span> state, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Folds over the bindings in the map 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> folder</h6>
          <p class="comments">The function to update the state given the input key/value pairs. </p>
          <h6><code><span title="Microsoft.FSharp.Collections.TState">TState</span></code> state</h6>
          <p class="comments">The initial state. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="Microsoft.FSharp.Collections.TState">TState</span></code></h6>
        <p>The final state value. </p>
      </div>
      
    </div>
	</div>
	<div id="FoldBack``3" class="method">
		<h4><span title="Microsoft.FSharp.Collections.TState">TState</span> <strong>FoldBack&lt;TKey, T, TState&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> folder, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table, <span title="Microsoft.FSharp.Collections.TState">TState</span> state)</h4>
		<div class="content">Folds over the bindings in the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> folder</h6>
          <p class="comments">The function to update the state given the input key/value pairs. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
          <h6><code><span title="Microsoft.FSharp.Collections.TState">TState</span></code> state</h6>
          <p class="comments">The initial state. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="Microsoft.FSharp.Collections.TState">TState</span></code></h6>
        <p>The final state value. </p>
      </div>
      
    </div>
	</div>
	<div id="ForAll``2" class="method">
		<h4><span title="System.bool">bool</span> <strong>ForAll&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Returns true if the given predicate returns true for all of the
bindings in the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to test the input elements. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.bool">bool</span></code></h6>
        <p>True if the predicate evaluates to true for all of the bindings in the map. </p>
      </div>
      
    </div>
	</div>
	<div id="IsEmpty``2" class="method">
		<h4><span title="System.bool">bool</span> <strong>IsEmpty&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Is the map empty? 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.bool">bool</span></code></h6>
        <p>True if the map is empty. </p>
      </div>
      
    </div>
	</div>
	<div id="Iterate``2" class="method">
		<h4><span title="System.void">void</span> <strong>Iterate&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> action, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Applies the given function to each binding in the dictionary 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> action</h6>
          <p class="comments">The function to apply to each key/value pair. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      
    </div>
	</div>
	<div id="Map``3" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>Map&lt;TKey, T, TResult&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> mapping, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Builds a new collection whose elements are the results of applying the given function
to each of the elements of the collection. The key passed to the
function indicates the key of element being transformed. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> mapping</h6>
          <p class="comments">The function to transform the key/value pairs. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code></h6>
        <p>The resulting map of keys and transformed values. </p>
      </div>
      
    </div>
	</div>
	<div id="OfArray``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>OfArray&lt;TKey, T&gt;</strong>(<span title="System.Tuple`2[]">Tuple`2[]</span> elements)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="OfList``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>OfList&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Collections/FSharpList`1.htm">FSharpList&lt;T&gt;</a> elements)</h4>
		<div class="content">Returns a new map made from the given bindings. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpList`1.htm">FSharpList&lt;T&gt;</a></code> elements</h6>
          <p class="comments">The input list of key/value pairs. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code></h6>
        <p>The resulting map. </p>
      </div>
      
    </div>
	</div>
	<div id="OfSeq``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>OfSeq&lt;TKey, T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<Tuple<TKey, T>>">IEnumerable&lt;Tuple&lt;TKey, T&gt;&gt;</span> elements)</h4>
		<div class="content">Returns a new map made from the given bindings. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Collections.Generic.IEnumerable<Tuple<TKey, T>>">IEnumerable&lt;Tuple&lt;TKey, T&gt;&gt;</span></code> elements</h6>
          <p class="comments">The input sequence of key/value pairs. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code></h6>
        <p>The resulting map. </p>
      </div>
      
    </div>
	</div>
	<div id="Partition``2" class="method">
		<h4><span title="System.Tuple<FSharpMap<TKey, T>, FSharpMap<TKey, T>>">Tuple&lt;FSharpMap&lt;TKey, T&gt;, FSharpMap&lt;TKey, T&gt;&gt;</span> <strong>Partition&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Builds two new maps, one containing the bindings for which the given predicate returns 'true',
and the other the remaining bindings. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to test the input elements. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Tuple<FSharpMap<TKey, T>, FSharpMap<TKey, T>>">Tuple&lt;FSharpMap&lt;TKey, T&gt;, FSharpMap&lt;TKey, T&gt;&gt;</span></code></h6>
        <p>A pair of maps in which the first contains the elements for which the predicate returned true
and the second containing the elements for which the predicated returned false. </p>
      </div>
      
    </div>
	</div>
	<div id="Pick``3" class="method">
		<h4><span title="Microsoft.FSharp.Collections.TResult">TResult</span> <strong>Pick&lt;TKey, T, TResult&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> chooser, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Searches the map looking for the first element where the given function returns a  <code>Some</code>  value 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> chooser</h6>
          <p class="comments">The function to generate options from the key/value pairs. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="Microsoft.FSharp.Collections.TResult">TResult</span></code></h6>
        <p>The first result. </p>
      </div>
      
    </div>
	</div>
	<div id="Remove``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> <strong>Remove&lt;TKey, T&gt;</strong>(<span title="Microsoft.FSharp.Collections.TKey">TKey</span> key, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Removes an element from the domain of the map. No exception is raised if the element is not present. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="Microsoft.FSharp.Collections.TKey">TKey</span></code> key</h6>
          <p class="comments">The input key. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code></h6>
        <p>The resulting map. </p>
      </div>
      
    </div>
	</div>
	<div id="ToArray``2" class="method">
		<h4><span title="System.Tuple`2[]">Tuple`2[]</span> <strong>ToArray&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Returns an array of all key-value pairs in the mapping.
The array will be ordered by the keys of the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Tuple`2[]">Tuple`2[]</span></code></h6>
        <p>The array of key/value pairs. </p>
      </div>
      
    </div>
	</div>
	<div id="ToList``2" class="method">
		<h4><a href="../Microsoft.FSharp.Collections/FSharpList`1.htm">FSharpList&lt;T&gt;</a> <strong>ToList&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Returns a list of all key-value pairs in the mapping.
The list will be ordered by the keys of the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Collections/FSharpList`1.htm">FSharpList&lt;T&gt;</a></code></h6>
        <p>The list of key/value pairs. </p>
      </div>
      
    </div>
	</div>
	<div id="ToSeq``2" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<Tuple<TKey, T>>">IEnumerable&lt;Tuple&lt;TKey, T&gt;&gt;</span> <strong>ToSeq&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Views the collection as an enumerable sequence of pairs.
The sequence will be ordered by the keys of the map. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Collections.Generic.IEnumerable<Tuple<TKey, T>>">IEnumerable&lt;Tuple&lt;TKey, T&gt;&gt;</span></code></h6>
        <p>The sequence of key/value pairs. </p>
      </div>
      
    </div>
	</div>
	<div id="TryFind``2" class="method">
		<h4><a href="../Microsoft.FSharp.Core/FSharpOption`1.htm">FSharpOption&lt;T&gt;</a> <strong>TryFind&lt;TKey, T&gt;</strong>(<span title="Microsoft.FSharp.Collections.TKey">TKey</span> key, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Lookup an element in the map, returning a  <code>Some</code>  value if the element is in the domain
of the map and  <code>None</code>  if not. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="Microsoft.FSharp.Collections.TKey">TKey</span></code> key</h6>
          <p class="comments">The input key. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Core/FSharpOption`1.htm">FSharpOption&lt;T&gt;</a></code></h6>
        <p>The found  <code>Some</code>  value or  <code>None</code>. </p>
      </div>
      
    </div>
	</div>
	<div id="TryFindKey``2" class="method">
		<h4><a href="../Microsoft.FSharp.Core/FSharpOption`1.htm">FSharpOption&lt;T&gt;</a> <strong>TryFindKey&lt;TKey, T&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Returns the key of the first mapping in the collection that satisfies the given predicate.
Returns 'None' if no such element exists. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to test the input elements. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Core/FSharpOption`1.htm">FSharpOption&lt;T&gt;</a></code></h6>
        <p>The first key for which the predicate returns true or None if the predicate evaluates to false for each key/value pair. </p>
      </div>
      
    </div>
	</div>
	<div id="TryPick``3" class="method">
		<h4><a href="../Microsoft.FSharp.Core/FSharpOption`1.htm">FSharpOption&lt;T&gt;</a> <strong>TryPick&lt;TKey, T, TResult&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> chooser, <a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a> table)</h4>
		<div class="content">Searches the map looking for the first element where the given function returns a  <code>Some</code>  value. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> chooser</h6>
          <p class="comments">The function to generate options from the key/value pairs. </p>
          <h6><code><a href="../Microsoft.FSharp.Collections/FSharpMap`2.htm">FSharpMap&lt;TKey, TValue&gt;</a></code> table</h6>
          <p class="comments">The input map. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Core/FSharpOption`1.htm">FSharpOption&lt;T&gt;</a></code></h6>
        <p>The first result. </p>
      </div>
      
    </div>
	</div>
	
	<div id="footer">
  <p>Based on v4.3.0.0 of FSharp.Core.dll (Microsoft&#174; Visual Studio&#174; 2012)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>