<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>EventModule - Microsoft&#174; Visual Studio&#174; 2012 Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../FSharp.Control/index.htm">FSharp.Control</a>
      </li>
			<li>
          <a href="../FSharp.IO/index.htm">FSharp.IO</a>
      </li>
			<li>
          <a href="../FSharp.Net/index.htm">FSharp.Net</a>
      </li>
			<li>
          <a href="../FSharpx/index.htm">FSharpx</a>
      </li>
			<li>
          <a href="../FSharpx.Core/index.htm">FSharpx.Core</a>
      </li>
			<li>
          <a href="../FSharpx.DataStructures/index.htm">FSharpx.DataStructures</a>
      </li>
			<li>
          <a href="../FSharpx.Http/index.htm">FSharpx.Http</a>
      </li>
			<li>
          <a href="../FSharpx.Observable/index.htm">FSharpx.Observable</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders/index.htm">FSharpx.TypeProviders</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.AppSettings/index.htm">FSharpx.TypeProviders.AppSettings</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Documents/index.htm">FSharpx.TypeProviders.Documents</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Excel/index.htm">FSharpx.TypeProviders.Excel</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase/index.htm">FSharpx.TypeProviders.Freebase</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.DesignTime/index.htm">FSharpx.TypeProviders.Freebase.DesignTime</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.FreebaseRuntime/index.htm">FSharpx.TypeProviders.Freebase.FreebaseRuntime</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Freebase.FreebaseTypeExtender/index.htm">FSharpx.TypeProviders.Freebase.FreebaseTypeExtender</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Graph/index.htm">FSharpx.TypeProviders.Graph</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Machine/index.htm">FSharpx.TypeProviders.Machine</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Math/index.htm">FSharpx.TypeProviders.Math</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Regex/index.htm">FSharpx.TypeProviders.Regex</a>
      </li>
			<li>
          <a href="../FSharpx.TypeProviders.Xaml/index.htm">FSharpx.TypeProviders.Xaml</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections/index.htm">Microsoft.FSharp.Collections</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections.Tagged/index.htm">Microsoft.FSharp.Collections.Tagged</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Control/index.htm" class="current">Microsoft.FSharp.Control</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Core/index.htm">Microsoft.FSharp.Core</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Core.CompilerServices/index.htm">Microsoft.FSharp.Core.CompilerServices</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Data.TypeProviders.DesignTime/index.htm">Microsoft.FSharp.Data.TypeProviders.DesignTime</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Data.UnitSystems.SI.UnitNames/index.htm">Microsoft.FSharp.Data.UnitSystems.SI.UnitNames</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq/index.htm">Microsoft.FSharp.Linq</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq.QueryRunExtensions/index.htm">Microsoft.FSharp.Linq.QueryRunExtensions</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Linq.RuntimeHelpers/index.htm">Microsoft.FSharp.Linq.RuntimeHelpers</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Math/index.htm">Microsoft.FSharp.Math</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Metadata/index.htm">Microsoft.FSharp.Metadata</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.NativeInterop/index.htm">Microsoft.FSharp.NativeInterop</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Quotations/index.htm">Microsoft.FSharp.Quotations</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Reflection/index.htm">Microsoft.FSharp.Reflection</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text/index.htm">Microsoft.FSharp.Text</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.Lexing/index.htm">Microsoft.FSharp.Text.Lexing</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.Parsing/index.htm">Microsoft.FSharp.Text.Parsing</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Text.StructuredFormat/index.htm">Microsoft.FSharp.Text.StructuredFormat</a>
      </li>
			<li>
          <a href="../Samples.FSharp.ProvidedTypes/index.htm">Samples.FSharp.ProvidedTypes</a>
      </li>
			<li>
          <a href="../Utilities.Caching/index.htm">Utilities.Caching</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in Microsoft.FSharp.Control</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../Microsoft.FSharp.Control/AsyncResult`1.htm">AsyncResult&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/AsyncResultCell`1.htm">AsyncResultCell&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/AsyncStreamReader.htm">AsyncStreamReader</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/AsyncWorker`1.htm">AsyncWorker&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/CommonExtensions.htm">CommonExtensions</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/EventModule.htm" class="current">EventModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FileExtensions.htm">FileExtensions</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpAsync.htm">FSharpAsync</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpAsync`1.htm">FSharpAsync&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpAsyncBuilder.htm">FSharpAsyncBuilder</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpAsyncReplyChannel`1.htm">FSharpAsyncReplyChannel&lt;TReply&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpDelegateEvent`1.htm">FSharpDelegateEvent&lt;TDelegate&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpEvent`1.htm">FSharpEvent&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpEvent`2.htm">FSharpEvent&lt;TDelegate, TArgs&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpHandler`1.htm">FSharpHandler&lt;T&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/FSharpMailboxProcessor`1.htm">FSharpMailboxProcessor&lt;TMsg&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/IDelegateEvent`1.htm">IDelegateEvent&lt;TDelegate&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/LazyExtensions.htm">LazyExtensions</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/ObservableModule.htm">ObservableModule</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/StreamReaderExtensions.htm">StreamReaderExtensions</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/Tags.htm">Tags</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/WebClientExtensions.htm">WebClientExtensions</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/WebExtensions.htm">WebExtensions</a>
        </li>
				<li>
            <a href="../Microsoft.FSharp.Control/WebRequestExtensions.htm">WebRequestExtensions</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> EventModule</p>
		<p><strong>Namespace</strong> Microsoft.FSharp.Control</p>
	</div>
    <div class="sub-header">
		
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Add``2">Add&lt;T, TDel&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Choose``3">Choose&lt;T, TResult, TDel&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Filter``2">Filter&lt;T, TDel&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Map``3">Map&lt;T, TResult, TDel&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Merge``3">Merge&lt;TDel1, T, TDel2&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Pairwise``2">Pairwise&lt;TDel, T&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Partition``2">Partition&lt;T, TDel&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Scan``3">Scan&lt;TResult, T, TDel&gt;</a></li>
				<li><a href="../Microsoft.FSharp.Control/EventModule.htm#Split``4">Split&lt;T, TResult1, TResult2, TDel&gt;</a></li>
			</ul>
		
		
	</div>
	
	
	
	<h3 class="section">Public static methods</h3>
	
	<div id="Add``2" class="method">
		<h4><span title="System.void">void</span> <strong>Add&lt;T, TDel&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> callback, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Runs the given function each time the given event is triggered. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> callback</h6>
          <p class="comments">The function to call when the event is triggered. </p>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      
    </div>
	</div>
	<div id="Choose``3" class="method">
		<h4><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> <strong>Choose&lt;T, TResult, TDel&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> chooser, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Returns a new event which fires on a selection of messages from the original event.
The selection function takes an original message to an optional new message. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> chooser</h6>
          <p class="comments">The function to select and transform event values to pass on. </p>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code></h6>
        <p>An event that fires only when the chooser returns Some. </p>
      </div>
      
    </div>
	</div>
	<div id="Filter``2" class="method">
		<h4><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> <strong>Filter&lt;T, TDel&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Returns a new event that listens to the original event and triggers the resulting
event only when the argument to the event passes the given function. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to determine which triggers from the event to propagate. </p>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code></h6>
        <p>An event that only passes values that pass the predicate. </p>
      </div>
      
    </div>
	</div>
	<div id="Map``3" class="method">
		<h4><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> <strong>Map&lt;T, TResult, TDel&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> mapping, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Returns a new event that passes values transformed by the given function. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> mapping</h6>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code></h6>
        <p>An event that passes the transformed values. </p>
      </div>
      
    </div>
	</div>
	<div id="Merge``3" class="method">
		<h4><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> <strong>Merge&lt;TDel1, T, TDel2&gt;</strong>(<a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> event1, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> event2)</h4>
		<div class="content">Fires the output event when either of the input events fire. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> event1</h6>
          <p class="comments">The first input event. </p>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> event2</h6>
          <p class="comments">The second input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code></h6>
        <p>An event that fires when either of the input events fire. </p>
      </div>
      
    </div>
	</div>
	<div id="Pairwise``2" class="method">
		<h4><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> <strong>Pairwise&lt;TDel, T&gt;</strong>(<a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Returns a new event that triggers on the second and subsequent triggerings of the input event.
The Nth triggering of the input event passes the arguments from the N-1th and Nth triggering as
a pair. The argument passed to the N-1th triggering is held in hidden internal state until the
Nth triggering occurs. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code></h6>
        <p>An event that triggers on pairs of consecutive values passed from the source event. </p>
      </div>
      
    </div>
	</div>
	<div id="Partition``2" class="method">
		<h4><span title="System.Tuple<IEvent<FSharpHandler<T>, T>, IEvent<FSharpHandler<T>, T>>">Tuple&lt;IEvent&lt;FSharpHandler&lt;T&gt;, T&gt;, IEvent&lt;FSharpHandler&lt;T&gt;, T&gt;&gt;</span> <strong>Partition&lt;T, TDel&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> predicate, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Returns a new event that listens to the original event and triggers the
first resulting event if the application of the predicate to the event arguments
returned true, and the second event if it returned false. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> predicate</h6>
          <p class="comments">The function to determine which output event to trigger. </p>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Tuple<IEvent<FSharpHandler<T>, T>, IEvent<FSharpHandler<T>, T>>">Tuple&lt;IEvent&lt;FSharpHandler&lt;T&gt;, T&gt;, IEvent&lt;FSharpHandler&lt;T&gt;, T&gt;&gt;</span></code></h6>
        <p>A tuple of events.  The first is triggered when the predicate evaluates to true
and the second when the predicate evaluates to false. </p>
      </div>
      
    </div>
	</div>
	<div id="Scan``3" class="method">
		<h4><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> <strong>Scan&lt;TResult, T, TDel&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> collector, <span title="Microsoft.FSharp.Control.TResult">TResult</span> state, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Returns a new event consisting of the results of applying the given accumulating function
to successive values triggered on the input event.  An item of internal state
records the current value of the state parameter.  The internal state is not locked during the
execution of the accumulation function, so care should be taken that the
input IEvent not triggered by multiple threads simultaneously. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> collector</h6>
          <p class="comments">The function to update the state with each event value. </p>
          <h6><code><span title="Microsoft.FSharp.Control.TResult">TResult</span></code> state</h6>
          <p class="comments">The initial state. </p>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code></h6>
        <p>An event that fires on the updated state values. </p>
      </div>
      
    </div>
	</div>
	<div id="Split``4" class="method">
		<h4><span title="System.Tuple<IEvent<FSharpHandler<TResult1>, TResult1>, IEvent<FSharpHandler<TResult2>, TResult2>>">Tuple&lt;IEvent&lt;FSharpHandler&lt;TResult1&gt;, TResult1&gt;, IEvent&lt;FSharpHandler&lt;TResult2&gt;, TResult2&gt;&gt;</span> <strong>Split&lt;T, TResult1, TResult2, TDel&gt;</strong>(<a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a> splitter, <a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a> sourceEvent)</h4>
		<div class="content">Returns a new event that listens to the original event and triggers the
first resulting event if the application of the function to the event arguments
returned a Choice1Of2, and the second event if it returns a Choice2Of2. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../Microsoft.FSharp.Core/FSharpFunc`2.htm">FSharpFunc&lt;T, TResult&gt;</a></code> splitter</h6>
          <p class="comments">The function to transform event values into one of two types. </p>
          <h6><code><a href="../Microsoft.FSharp.Control/IEvent`2.htm">IEvent&lt;TDelegate, TArgs&gt;</a></code> sourceEvent</h6>
          <p class="comments">The input event. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Tuple<IEvent<FSharpHandler<TResult1>, TResult1>, IEvent<FSharpHandler<TResult2>, TResult2>>">Tuple&lt;IEvent&lt;FSharpHandler&lt;TResult1&gt;, TResult1&gt;, IEvent&lt;FSharpHandler&lt;TResult2&gt;, TResult2&gt;&gt;</span></code></h6>
        <p>A tuple of events.  The first fires whenever  <code>splitter</code>  evaluates to Choice1of1 and
the second fires whenever  <code>splitter</code>  evaluates to Choice2of2. </p>
      </div>
      
    </div>
	</div>
	
	<div id="footer">
  <p>Based on v4.3.0.0 of FSharp.Core.dll (Microsoft&#174; Visual Studio&#174; 2012)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>